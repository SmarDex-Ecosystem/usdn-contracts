{
    "fuzzing": {
        "workers": 10,
        "workerResetLimit": 50,
        "timeout": 0,
        "testLimit": 10000,
        "shrinkLimit": 5000,
        "callSequenceLength": 100,
        "corpusDirectory": "test/fuzzing/medusa-corpus",
        "coverageEnabled": true,
        "coverageFormats": [
            "html",
            "lcov"
        ],
        "revertReporterEnabled": true,
        "targetContracts": [
            "FuzzGuided"
        ],
        "predeployedContracts": {
            "Accumulator": "0xf1",
            "DoubleEndedQueue": "0xf2",
            "SignedMath": "0xf3",
            "HugeUint": "0xf4",
            "TickMath": "0xf5",
            "UsdnProtocolActionsLongLibrary": "0xf6",
            "UsdnProtocolActionsUtilsLibrary": "0xf7",
            "UsdnProtocolConstantsLibrary": "0xf8",
            "UsdnProtocolCoreLibrary": "0xf9",
            "UsdnProtocolLongLibrary": "0xfa",
            "UsdnProtocolSettersLibrary": "0xfb",
            "UsdnProtocolUtilsLibrary": "0xfc",
            "UsdnProtocolVaultLibrary": "0xfd"
        },
        "targetContractsBalances": [
            "0xffffffffffffffffffffffffffffffff"
        ],
        "constructorArgs": {},
        "deployerAddress": "0x30000",
        "senderAddresses": [
            "0x10000",
            "0x20000",
            "0x30000",
            "0x40000"
        ],
        "blockNumberDelayMax": 0,
        "blockTimestampDelayMax": 0,
        "blockGasLimit": 125000000,
        "transactionGasLimit": 12500000,
        "verbosity": 0,
        "testing": {
            "stopOnFailedTest": true,
            "stopOnFailedContractMatching": false,
            "stopOnNoTests": true,
            "testAllContracts": false,
            "traceAll": false,
            "assertionTesting": {
                "enabled": true,
                "testViewMethods": true,
                "panicCodeConfig": {
                    "failOnCompilerInsertedPanic": true,
                    "failOnAssertion": true,
                    "failOnArithmeticUnderflow": false,
                    "failOnDivideByZero": true,
                    "failOnEnumTypeConversionOutOfBounds": true,
                    "failOnIncorrectStorageAccess": true,
                    "failOnPopEmptyArray": true,
                    "failOnOutOfBoundsArrayAccess": true,
                    "failOnAllocateTooMuchMemory": true,
                    "failOnCallUninitializedVariable": true
                }
            },
            "propertyTesting": {
                "enabled": true,
                "testPrefixes": [
                    "property_"
                ]
            },
            "optimizationTesting": {
                "enabled": true,
                "testPrefixes": [
                    "optimize_"
                ]
            },
            "targetFunctionSignatures": [],
            "excludeFunctionSignatures": []
        },
        "chainConfig": {
            "codeSizeCheckDisabled": true,
            "cheatCodes": {
                "cheatCodesEnabled": true,
                "enableFFI": false
            },
            "skipAccountChecks": true,
            "forkConfig": {
                "forkModeEnabled": false,
                "rpcUrl": "",
                "rpcBlock": 1,
                "poolSize": 20
            }
        }
    },
    "compilation": {
        "platform": "crytic-compile",
        "platformConfig": {
            "target": "./test/fuzzing/FuzzGuided.sol",
            "solcVersion": "0.8.26",
            "exportDirectory": "",
            "args": [
                "--compile-libraries=(Accumulator,0xf1),(DoubleEndedQueue,0xf2),(SignedMath,0xf3),(HugeUint,0xf4),(TickMath,0xf5),(UsdnProtocolActionsLongLibrary,0xf6),(UsdnProtocolActionsUtilsLibrary,0xf7),(UsdnProtocolConstantsLibrary,0xf8),(UsdnProtocolCoreLibrary,0xf9),(UsdnProtocolLongLibrary,0xfa),(UsdnProtocolSettersLibrary,0xfb),(UsdnProtocolUtilsLibrary,0xfc),(UsdnProtocolVaultLibrary,0xfd)"
            ]
        }
    },
    "slither": {
        "useSlither": true,
        "cachePath": "slither_results.json"
    },
    "logging": {
        "level": "info",
        "logDirectory": "",
        "noColor": false
    }
}