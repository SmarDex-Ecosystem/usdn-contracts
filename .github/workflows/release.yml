#  This workflow is triggered on push to main branch.
#  It will bump the version in package.json and create a pull request.
#  When the pull request is merged, it will publish the package to CodeArtifact.
name: Release Workflow

on:
  push:
    branches:
      - main

permissions:
  id-token: write # Required for requesting AWS JWT
  contents: write # Required for actions/checkout and push commit
  pull-requests: write # Required for creating pull-requests

jobs:
  bump-version-and-create-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Commit and push version bump
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          npm --no-git-tag-version version patch
          git commit -am "ci(release): bump version"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          title: Bump version
          body: |
            Bump version in package.json.
            Merging this pull request will publish the package to CodeArtifact.
          commit-message: Bump version
          delete-branch: true
          branch: release/patch

  publish-to-codeartifact:
    needs: bump-version-and-create-pr
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Install dependencies
        run: npm ci && forge install

      - name: Export ABI
        run: npm run exportAbi

      - name: Configure AWS credentials
        uses: backend-ra2-tech/composite-workflows/aws-login@main
        with:
          aws-role-to-assume: github-workflow-oidc-codeartifacts-deploy

      - name: Get version from package.json
        id: get-version
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: "./package.json"
          prop_path: "version"

      - name: Publish to CodeArtifact
        env:
          NEW_VERSION: "${{ steps.get-version.outputs.value }}"  
        run: |
           npm publish
