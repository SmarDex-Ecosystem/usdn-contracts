name: Main workflow
on:
  push:
    branches:
      - main
  pull_request:

env:
  FOUNDRY_PROFILE: ci

jobs:
  run-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci && forge soldeer install

      # skip for now
      #- name: Check gas snapshots
      #  run: npm run snapshot:check

      - name: Run tests
        run: forge test -vvv --no-match-test \"(FFI|Fork|Fuzz|invariant)\" --no-match-contract Fork --offline
        #run: forge test --no-match-test "(FFI|Fork)" --no-match-contract Fork
        
      # - name: Send Discord message on failure
      #   if: failure()
      #   uses: appleboy/discord-action@master
      #   with:
      #     webhook_id: ${{ secrets.DISCORD_BC_CI_WEBHOOK_ID }}
      #     webhook_token: ${{ secrets.DISCORD_BC_CI_WEBHOOK_TOKEN }}
      #     color: "#ff0000"
      #     username: "Pere Fouettard"
      #     message: ${{ github.triggering_actor }} has been added to the naughty list for breaking the CI ${{ github.event_name }} in ${{ github.ref_name }}

  run-slither:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm ci && forge soldeer install

      - name: Install slither
        uses: threeal/pipx-install-action@v1.0.0
        with:
          packages: slither-analyzer

      - name: Run slither
        run: |
          slither --fail-none --json - . | jq '.results.detectors[] | .elements[0].source_mapping as $src | "::\( if .impact == "High" then "error" elif .impact == "Medium" then "warning" else "notice" end ) file=\( $src.filename_relative ),col=\( $src.starting_column ),endColumn=\( $src.ending_column ),line=\( $src.lines[0] )\( if $src.lines[0] == $src.lines[-1] then "" else ",endLine=" + "\( $src.lines[-1] )" end )::\( .description )"' | xargs -n1 echo

  notify-on-failure:
    needs: [run-ci, run-slither]
    if: failure()
    uses: ./.github/workflows/notify_failure.yml